generator client {
  provider      = "prisma-client-js"
  output        = "/home/ubuntu/production_cost_system/app/node_modules/.prisma/client"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Equipment {
  id                 String                       @id @default(cuid())
  name               String
  estimatedCost      Float
  hourlyDepreciation Float
  maxProductivity    Float?
  productivityUnits  String?
  comment            String?
  createdAt          DateTime                     @default(now())
  updatedAt          DateTime                     @updatedAt
  trackInOccupancy   Boolean                      @default(true)
  operationEquipment OperationEquipment[]
  templateEquipment  OperationTemplateEquipment[]

  @@map("equipment")
}

model EmployeeRole {
  id             String                   @id @default(cuid())
  name           String
  paymentType    PaymentType
  hourlyRate     Float
  createdAt      DateTime                 @default(now())
  updatedAt      DateTime                 @updatedAt
  employeeRoles  EmployeeRoleAssignment[]
  operationRoles OperationRole[]
  templateRoles  OperationTemplateRole[]

  @@map("employee_roles")
}

model Employee {
  id        String                   @id @default(cuid())
  name      String
  isActive  Boolean                  @default(true)
  comment   String?
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt
  roles     EmployeeRoleAssignment[]

  @@map("employees")
}

model EmployeeRoleAssignment {
  id         String       @id @default(cuid())
  employeeId String
  roleId     String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  employee   Employee     @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  role       EmployeeRole @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([employeeId, roleId])
  @@map("employee_role_assignments")
}

model Product {
  id                  String              @id @default(cuid())
  name                String
  description         String?
  imagePath           String?
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  orderItems          OrderItem[]
  productionProcesses ProductionProcess[]

  @@map("products")
}

model MaterialCategory {
  id        String     @id @default(cuid())
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  materials Material[]

  @@map("material_categories")
}

model Material {
  id                      String                          @id @default(cuid())
  name                    String
  categoryId              String
  unit                    String
  cost                    Float
  vatPercentage           Float                           @default(0)
  createdAt               DateTime                        @default(now())
  updatedAt               DateTime                        @updatedAt
  comment                 String?
  purchaseBatchTemplates  MaterialPurchaseBatchTemplate[]
  materialPurchaseBatches MaterialPurchaseBatch[]
  category                MaterialCategory                @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  operationMaterials      OperationMaterial[]
  templateMaterials       OperationTemplateMaterial[]

  @@map("materials")
}

model RecurringExpense {
  id        String        @id @default(cuid())
  name      String
  period    ExpensePeriod
  amount    Float
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  active    Boolean       @default(true)
  notes     String?
  vatRate   Float         @default(0)

  @@map("recurring_expenses")
}

model ProductionProcess {
  id              String           @id @default(cuid())
  productId       String
  name            String
  description     String?
  comment         String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  operationChains OperationChain[]
  orderItems      OrderItem[]
  product         Product          @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("production_processes")
}

model OperationChain {
  id                String                @id @default(cuid())
  processId         String
  name              String
  chainType         ChainType
  orderIndex        Int                   @default(1)
  comment           String?
  enabled           Boolean               @default(true)
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  estimatedQuantity Int?
  process           ProductionProcess     @relation(fields: [processId], references: [id], onDelete: Cascade)
  operations        ProductionOperation[]

  @@map("operation_chains")
}

model ProductionOperation {
  id                                   String               @id @default(cuid())
  chainId                              String
  name                                 String
  description                          String?
  comment                              String?
  orderIndex                           Int
  enabled                              Boolean              @default(true)
  estimatedProductivityPerHour         Float?
  estimatedProductivityPerHourVariance Float?
  cycleHours                           Float?
  operationDuration                    Float?
  minimumBatchSize                     Int?                 @default(1)
  cycleName                            String?
  cyclesPerHour                        Float?
  itemsPerCycle                        Float?
  createdAt                            DateTime             @default(now())
  updatedAt                            DateTime             @updatedAt
  operationEquipment                   OperationEquipment[]
  operationMaterials                   OperationMaterial[]
  operationRoles                       OperationRole[]
  chain                                OperationChain       @relation(fields: [chainId], references: [id], onDelete: Cascade)

  @@map("production_operations")
}

model OperationMaterial {
  id              String              @id @default(cuid())
  operationId     String
  materialId      String
  quantity        Float
  quantityPerHour Float?
  unitPrice       Float
  totalCost       Float
  variance        Float?
  comment         String?
  enabled         Boolean             @default(true)
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  material        Material            @relation(fields: [materialId], references: [id], onDelete: Cascade)
  operation       ProductionOperation @relation(fields: [operationId], references: [id], onDelete: Cascade)

  @@map("operation_materials")
}

model OperationEquipment {
  id                          String              @id @default(cuid())
  operationId                 String
  equipmentId                 String
  machineTime                 Float
  machineTimeSeconds          Float?
  piecesPerHour               Float?
  hourlyRate                  Float
  totalCost                   Float
  variance                    Float?
  comment                     String?
  enabled                     Boolean             @default(true)
  requiresContinuousOperation Boolean             @default(true)
  createdAt                   DateTime            @default(now())
  updatedAt                   DateTime            @updatedAt
  equipment                   Equipment           @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  operation                   ProductionOperation @relation(fields: [operationId], references: [id], onDelete: Cascade)

  @@map("operation_equipment")
}

model OperationRole {
  id                         String              @id @default(cuid())
  operationId                String
  roleId                     String
  timeSpent                  Float
  timeSpentSeconds           Float?
  piecesPerHour              Float?
  paymentType                PaymentType
  rate                       Float
  totalCost                  Float
  variance                   Float?
  comment                    String?
  enabled                    Boolean             @default(true)
  requiresContinuousPresence Boolean             @default(true)
  createdAt                  DateTime            @default(now())
  updatedAt                  DateTime            @updatedAt
  operation                  ProductionOperation @relation(fields: [operationId], references: [id], onDelete: Cascade)
  role                       EmployeeRole        @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@map("operation_roles")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Order {
  id                      String                  @id @default(cuid())
  name                    String
  orderDate               DateTime
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  materialPurchaseBatches MaterialPurchaseBatch[]
  orderItems              OrderItem[]
  paymentSchedules        PaymentSchedule[]
  simulationSettingsV2    SimulationSettingsV2?

  @@map("orders")
}

model OrderItem {
  id                  String            @id @default(cuid())
  orderId             String
  productId           String
  quantity            Int
  productionProcessId String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  order               Order             @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product             Product           @relation(fields: [productId], references: [id], onDelete: Cascade)
  productionProcess   ProductionProcess @relation(fields: [productionProcessId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

model OperationTemplate {
  id                                   String                       @id @default(cuid())
  name                                 String
  description                          String?
  comment                              String?
  enabled                              Boolean                      @default(true)
  estimatedProductivityPerHour         Float?
  estimatedProductivityPerHourVariance Float?
  cycleHours                           Float?
  minimumBatchSize                     Int?                         @default(1)
  createdAt                            DateTime                     @default(now())
  updatedAt                            DateTime                     @updatedAt
  operationDuration                    Float?
  cycleName                            String?
  cyclesPerHour                        Float?
  itemsPerCycle                        Float?
  equipment                            OperationTemplateEquipment[]
  materials                            OperationTemplateMaterial[]
  roles                                OperationTemplateRole[]

  @@map("operation_templates")
}

model OperationTemplateMaterial {
  id         String            @id @default(cuid())
  templateId String
  materialId String
  quantity   Float
  unitPrice  Float
  totalCost  Float
  variance   Float?
  comment    String?
  enabled    Boolean           @default(true)
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  material   Material          @relation(fields: [materialId], references: [id], onDelete: Cascade)
  template   OperationTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@map("operation_template_materials")
}

model OperationTemplateEquipment {
  id                          String            @id @default(cuid())
  templateId                  String
  equipmentId                 String
  machineTime                 Float
  machineTimeSeconds          Float?
  piecesPerHour               Float?
  hourlyRate                  Float
  totalCost                   Float
  variance                    Float?
  comment                     String?
  enabled                     Boolean           @default(true)
  requiresContinuousOperation Boolean           @default(true)
  createdAt                   DateTime          @default(now())
  updatedAt                   DateTime          @updatedAt
  equipment                   Equipment         @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  template                    OperationTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@map("operation_template_equipment")
}

model OperationTemplateRole {
  id                         String            @id @default(cuid())
  templateId                 String
  roleId                     String
  timeSpent                  Float
  timeSpentSeconds           Float?
  piecesPerHour              Float?
  paymentType                PaymentType
  rate                       Float
  totalCost                  Float
  variance                   Float?
  comment                    String?
  enabled                    Boolean           @default(true)
  requiresContinuousPresence Boolean           @default(true)
  createdAt                  DateTime          @default(now())
  updatedAt                  DateTime          @updatedAt
  role                       EmployeeRole      @relation(fields: [roleId], references: [id], onDelete: Cascade)
  template                   OperationTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@map("operation_template_roles")
}

model SimulationSettings {
  id                String   @id @default(cuid())
  payIdleTime       Boolean  @default(true)
  enablePartialWork Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("simulation_settings")
}

model Backup {
  id         String   @id @default(cuid())
  type       String   @default("data-only")
  filename   String
  size       Int
  createdAt  DateTime @default(now())
  schemaHash String?
  filePath   String

  @@map("backups")
}

model GlobalSimulationSettingsV2 {
  id                           String   @id @default(cuid())
  workingHoursPerDay           Float    @default(8)
  restMinutesPerHour           Float    @default(0)
  waitForMaterialDelivery      Boolean  @default(true)
  includeRecurringExpenses     Boolean  @default(false)
  varianceMode                 String   @default("NO_VARIANCE")
  variancePercent              Float    @default(0)
  thresholdRatio               Float    @default(0.5)
  initialCashBalance           Float    @default(0)
  materialPrepayPercent        Float    @default(30)
  depreciationCashPolicy       String   @default("END_OF_SIMULATION")
  periodicExpensePaymentPolicy String   @default("DAILY")
  monthDivisor                 Float    @default(30)
  payrollPaymentPolicy         String   @default("DAILY")
  materialTwoPhasePayment      Boolean  @default(true)
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @updatedAt

  @@map("global_simulation_settings_v2")
}

model SimulationSettingsV2 {
  id                           String   @id @default(cuid())
  orderId                      String   @unique
  workingHoursPerDay           Float    @default(8)
  restMinutesPerHour           Float    @default(0)
  sellingPriceWithVAT          Float?
  vatRate                      Float    @default(20)
  profitTaxRate                Float    @default(20)
  includeRecurringExpenses     Boolean  @default(false)
  waitForMaterialDelivery      Boolean  @default(true)
  payEmployeesForIdleTime      Boolean  @default(false)
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @updatedAt
  depreciationCashPolicy       String   @default("end_of_simulation")
  initialCashBalance           Float    @default(0)
  materialPrepayPercent        Float    @default(0.3)
  monthDivisor                 Float    @default(30)
  periodicExpensePaymentPolicy String   @default("daily")
  thresholdRatio               Float    @default(0.5)
  varianceMode                 String   @default("no_variance")
  variancePercent              Float    @default(0)
  materialTwoPhasePayment      Boolean  @default(true)
  payrollPaymentPolicy         String   @default("daily")
  order                        Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("simulation_settings_v2")
}

model PaymentSchedule {
  id                String   @id @default(cuid())
  orderId           String
  dayNumber         Int
  percentageOfTotal Float
  amount            Float?
  description       String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  order             Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("payment_schedules")
}

model MaterialPurchaseBatch {
  id                   String   @id @default(cuid())
  orderId              String
  materialId           String
  quantity             Float
  pricePerUnit         Float
  totalCost            Float
  status               String   @default("planned")
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  prepaymentPaid       Float    @default(0)
  prepaymentPercentage Float    @default(0)
  remainingAmount      Float    @default(0)
  vatPercent           Float    @default(0)
  minStock             Float?
  manufacturingDays    Int      @default(0)
  deliveryDays         Int      @default(0)
  material             Material @relation(fields: [materialId], references: [id], onDelete: Cascade)
  order                Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("material_purchase_batches")
}

model MaterialPurchaseBatchTemplate {
  id                   String   @id @default(cuid())
  name                 String
  description          String?
  materialId           String
  quantity             Float
  pricePerUnit         Float
  prepaymentPercentage Float    @default(0)
  manufacturingDays    Int      @default(0)
  deliveryDays         Int      @default(0)
  minStock             Float?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  vatPercent           Float    @default(0)
  material             Material @relation(fields: [materialId], references: [id], onDelete: Cascade)

  @@map("material_purchase_batch_templates")
}

enum PaymentType {
  HOURLY
  PIECE_RATE
}

enum ExpensePeriod {
  DAY
  WEEK
  MONTH
  QUARTER
  YEAR
}

enum ChainType {
  ONE_TIME
  PER_UNIT
}
