/**
 * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ v2
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏ —Å –û–û–ü –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
 */

import { SimulationParameters, SimulationResult } from "./types";
import { loadSimulationData, loadSimulationSettingsV2 } from "./dataLoader";
import { SimulationEngine } from "./SimulationEngine";

/**
 * –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ (v2)
 * 
 * @param parameters - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–º—É–ª—è—Ü–∏–∏ (–±–µ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫)
 * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–º—É–ª—è—Ü–∏–∏
 */
export async function runSimulation(
  params: Omit<SimulationParameters, "settings">
): Promise<SimulationResult> {
  try {
    console.log("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ v2 (–û–û–ü)");
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ v2 –∏–∑ –ë–î –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    const settings = await loadSimulationSettingsV2(params.orderId);
    
    // –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    const parameters: SimulationParameters = {
      ...params,
      settings,
    };
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    console.log("üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã...");
    const data = await loadSimulationData(parameters.processId);
    
    console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ:`);
    console.log(`  - –ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: ${data.materials.length}`);
    console.log(`  - –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: ${data.equipment.length}`);
    console.log(`  - –†–æ–ª–µ–π: ${data.roles.length}`);
    console.log(`  - –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${data.employees.length}`);
    console.log(`  - –¶–µ–ø–æ—á–µ–∫ –æ–ø–µ—Ä–∞—Ü–∏–π: ${data.chains.length}`);
    
    // –°–æ–∑–¥–∞—Ç—å –¥–≤–∏–∂–æ–∫ —Å–∏–º—É–ª—è—Ü–∏–∏
    const engine = new SimulationEngine();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å
    console.log("‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏...");
    await engine.initialize(parameters, data);
    
    // –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é
    console.log("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏...");
    const result = await engine.run();
    
    console.log("‚úÖ –°–∏–º—É–ª—è—Ü–∏—è v2 –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ");
    console.log(`  - –û–±—â–µ–µ –≤—Ä–µ–º—è: ${(result.totalDuration ?? 0).toFixed(2)} —á–∞—Å–æ–≤`);
    console.log(`  - –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${(result.totalCost ?? 0).toFixed(2)}`);
    console.log(`  - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: ${(result.totalMaterialCost ?? 0).toFixed(2)}`);
    console.log(`  - –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ: ${(result.totalEquipmentCost ?? 0).toFixed(2)}`);
    console.log(`  - –ü–µ—Ä—Å–æ–Ω–∞–ª: ${(result.totalLaborCost ?? 0).toFixed(2)}`);
    
    return result;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ —Å–∏–º—É–ª—è—Ü–∏–∏ v2:", error);
    throw error;
  }
}

export * from "./types";
