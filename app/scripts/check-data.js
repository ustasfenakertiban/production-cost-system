
require('dotenv').config({ path: require('path').join(__dirname, '..', '.env') });
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkData() {
  try {
    const materials = await prisma.material.findMany();
    const equipment = await prisma.equipment.findMany();
    const roles = await prisma.employeeRole.findMany();
    const productionOperations = await prisma.productionOperation.findMany();
    const chains = await prisma.operationChain.findMany();
    const templates = await prisma.operationTemplate.findMany();
    
    console.log('\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
    console.log('‚ïë   –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•     ‚ïë');
    console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n');
    console.log('üì¶ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã:', materials.length);
    console.log('‚öôÔ∏è  –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:', equipment.length);
    console.log('üë§ –†–æ–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:', roles.length);
    console.log('üîß –û–ø–µ—Ä–∞—Ü–∏–∏:', operations.length);
    console.log('üîó –¶–µ–ø–æ—á–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–π:', chains.length);
    console.log('üìã –®–∞–±–ª–æ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–π:', templates.length);
    
    if (materials.length > 0) {
      console.log('\n--- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã ---');
      materials.forEach(m => console.log(`  ‚Ä¢ ${m.name} (${m.unit})`));
    }
    
    if (equipment.length > 0) {
      console.log('\n--- –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ ---');
      equipment.forEach(e => console.log(`  ‚Ä¢ ${e.name}`));
    }
    
    if (roles.length > 0) {
      console.log('\n--- –†–æ–ª–∏ ---');
      roles.forEach(r => console.log(`  ‚Ä¢ ${r.name}`));
    }
    
    console.log('\n');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkData();
